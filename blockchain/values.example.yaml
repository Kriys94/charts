# Default values for medici-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
eth-failover:
  nodes:
    - <REPLACE_HERE>
    - <REPLACE_HERE>
  ingress:
    enabled: false
  enabled: true
  service:
    port: 4000
  image:
    args: [
      <REPLACE_HERE>,
      <REPLACE_HERE>
    ]
geth:
  storage: 100Gi
  ingress:
    enabled: false
  enabled: false
  service:
    type: NodePort
    tcp: "30303"
    http: "8545"
    wss: "8546"
  image:
    command: ["/bin/sh"]
    args: ["-c",
    "geth --datadir /root/.ethereum --rpc --rpcapi eth,net,web3b --ws --wsapi eth,net,web3 --testnet;",
    "while true; do sleep 10;done;"]
  volumeMounts:
    - mountPath: "/root/.ethereum"
      name: ethereum
  volumes:
    #- name: ethereum
    #  persistentVolumeClaim:
    #    claimName: geth-volume-claim
    - name: ethereum
      awsElasticBlockStore:
        volumeID: <REPLACE_HERE>
parity:
  storage: 100Gi
  ingress:
    enabled: false
  enabled: false
  service:
    type: LoadBalancer
    port: "30303"
  image:
    command: ["/bin/sh"]
    args: ["-c",
    "parity --chain ropsten --base-path /root/.local/share/io.parity.ethereum;",
    "while true; do sleep 10;done;"]
  volumeMounts:
    - mountPath: "/root/.local/share/io.parity.ethereum"
      name: ethereum
  volumes:
    #- name: ethereum
    #  persistentVolumeClaim:
    #    claimName: parity-volume-claim
    - name: ethereum
      awsElasticBlockStore:
        volumeID: <REPLACE_HERE>
bitcoind:
  enabled: false
lnd:
  enabled: false
ipfs:
  enabled: false

serviceAccount:
  create: true
  annotations: {}
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
